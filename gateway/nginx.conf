worker_processes auto;

events {
    worker_connections 1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       8080;
        server_name  localhost;

        # Запрос для проверки токена
        location /auth {
            internal;  # Этот location недоступен извне
            proxy_pass http://security:3000/v1/token/validation/;
            proxy_pass_request_body off;  # Не передаём тело запроса
            proxy_set_header Content-Length "";
            proxy_set_header Authorization $http_authorization;

            # Обрабатываем ответ от сервиса security
            proxy_set_header X-Original-URI $request_uri;
        }

        error_page 401 = /error401;
        location /error401 {
            return 401 "Unauthorized";
        }

        location /v1/register {
            proxy_pass http://security:3000/v1/user;
        }

        location /v1/token {
            proxy_pass http://security:3000/v1/token;
        }

        location /v1/user {
            # Проверка токена через сервис security
            auth_request /auth;

            # Если токен проверен, проксируем запрос на backend
            proxy_pass http://security:3000/v1/user;
            proxy_pass_request_headers on;
            proxy_set_header Authorization $http_authorization;
        }

        location /v1/upload {
            proxy_pass http://uploader:3000/v1/upload;
            proxy_pass_request_headers on;
            proxy_set_header Authorization $http_authorization;
        }


        location ~ /v1/user/(.*) {
            set $image $1;
            proxy_pass http://minio:9000/images/$image;
            proxy_pass_request_headers on;
            proxy_set_header Authorization $http_authorization;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}
